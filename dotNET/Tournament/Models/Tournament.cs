using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using System.Text.Json.Serialization;

namespace tournament.Models;

public class Tournament
{
    // Tournament ID. BsonID is basicly a 24 character ID, generated by MongoDB
    [BsonId]
    [BsonRepresentation(BsonType.ObjectId)]
#nullable enable
    public string? Id { get; set; }

#nullable disable
    [BsonElement("Name")]
    [JsonPropertyName("Name")]
    public string Name { get; set; } = null!;


    public DateTime? Date { get; set; } = DateTime.Parse(DateTime.Now.ToString("yyyy-MM-ddTHH:mm"));
    #nullable enable
    public string? Status { get; set; } = "Fremtidig"!;

    #nullable disable
    public List<List<Match>> Rounds { get; set; } = null!;
    public class Match 
    {
        #nullable enable
        public string? Id { get; set; }
        #nullable disable
        public Player Winner { get; set; } = new Player("", "");
        public List<Player> Players { get; set; } = null!;

        public Match() {
            Random generator = new Random();
            Id = generator.Next(0, 1000000).ToString("D6");
        }

    }
    public class Player {
        public string name { get; set; }
        #nullable enable
        public string? Id { get; set; }
        public Player (string name, string? Id) {
            this.name = name;
            this.Id = Id;
        }
    }

}

